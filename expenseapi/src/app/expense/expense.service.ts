import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders } from '@angular/common/http'
import { Expense } from './expense';
import { Observable } from 'rxjs';
import { environment } from 'src/environments/environment';

@Injectable()
export class ExpenseService{
    
    // HttpClient by default formats the response to JSON. 
    constructor(private httpSvc: HttpClient) { }

    url = environment.baseUrl;

    exist = false; //if pk was autogenerated can use hidden field to check prior to executing add

    // Returns a list of expense entries.
    getAllEntries(): Observable<any> { 
        return this.httpSvc.get(`${this.url}`);
    }

    // Returns single entry by id.
    getExpenseById(expenseId: String): Observable<any> {
        this.exist = true;
        return this.httpSvc.get(`${this.url}` + `/` + expenseId);
    }

    // Adds single entry.
    addExpenseEntry(expense: Expense) {
        let body = JSON.stringify(expense);
        let headers = new HttpHeaders({ 
            'Accept': 'application/json',
            'Content-Type': 'application/json'
        });
        if(this.exist==true){
            return this.httpSvc.put(`${this.url}` + `/` + expense.pk,body, {headers: headers});
        } else {
            return this.httpSvc.post(`${this.url}` + `/add`, body, {headers: headers});
        }
    }

    // Deletes single entry.
    deleteEntry(expenseId: string) {
        let headers = new HttpHeaders({ 
            'Accept': 'application/json',
            'Content-Type': 'application/json' 
        });
        return this.httpSvc.put(`${this.url}` + `/delete?expId=` + expenseId, {headers:headers});
    }

    // Returns total for single category.
    getCategoryTotal(category: String) {
        return this.httpSvc.get(`${this.url}` + `/category/` + category);
    }

    // Returns totals for each category.
    getTotalsByCategory(): Observable<any> {
        return this.httpSvc.get(`${this.url}` + `/category`);
    }
}